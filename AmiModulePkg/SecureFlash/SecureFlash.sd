//**********************************************************************
//**********************************************************************
//**                                                                  **
//**        (C)Copyright 1985-2013, American Megatrends, Inc.         **
//**                                                                  **
//**                       All Rights Reserved.                       **
//**                                                                  **
//**        5555 Oakbrook Pkwy, Suite 200, Norcross, GA 30093         **
//**                                                                  **
//**                       Phone: (770)-246-8600                      **
//**                                                                  **
//**********************************************************************
//**********************************************************************

//<AMI_FHDR_START>
//----------------------------------------------------------------------------
//
// Name:        SecureFlash.sd
//
// Description:    
//
//----------------------------------------------------------------------------
//<AMI_FHDR_END>

#ifdef SETUP_DATA_DEFINITION
/***********************************************************/
/* Put NVRAM data definitions here.
/* For example:    UINT8 Data1;
/* These definitions will be converted by the build process
/* to a definitions of SETUP_DATA fields.
/***********************************************************/
#endif

#ifdef SECURITY_FORM_SET

  #ifdef FORM_SET_TYPEDEF
//    #include "XXX.h"
typedef struct{
    UINT8 Key;
    UINT8 Mode;
    UINT8 Lock;
} SECURE_FLASH_SETUP_VAR;
  #endif

  #ifdef FORM_SET_VARSTORE
    varstore SECURE_FLASH_SETUP_VAR,
        key   = AUTO_ID(SECURE_FLASH_MODE_ID),
        name  = SecureFlashSetupVar,
        guid  = {0x35c936af, 0xe1e1, 0x441a, 0xba, 0xd1, 0xe1, 0x54, 0x4e, 0x9d, 0x97, 0xa6};
  #endif

//  #ifdef FORM_SET_ITEM
    // Define controls to be added to the main page of the formset
  #ifdef FORM_SET_GOTO
    //
    // Define goto commands for the forms defined in this file
    //
    //
    // Define goto commands for the forms defined in this file
    //
//    SEPARATOR
    goto SECURE_FLASH_SUBMENU_FORM_ID,
    prompt  = STRING_TOKEN(SECURE_FLASH_MENU_FORM_TITLE),
    help    = STRING_TOKEN(SECURE_FLASH_MENU_FORM_HELP);

  #endif

  #ifdef FORM_SET_FORM
    //
    // Define forms
    //
    form formid = AUTO_ID(SECURE_FLASH_SUBMENU_FORM_ID),
    title     = STRING_TOKEN(SECURE_FLASH_MENU_FORM_TITLE);

//        SEPARATOR
// Secure Flash
        suppressif ideqval SECURE_FLASH_SETUP_VAR.Key == 0;
            text 
                help   = STRING_TOKEN(STR_EMPTY),
                text   = STRING_TOKEN(STR_SECURE_FLASH_MODE),
                text   = STRING_TOKEN(STR_ENABLED),
                flags  = 0,
                key    = 0;
        endif;
        suppressif NOT ideqval SECURE_FLASH_SETUP_VAR.Key == 0;
            text 
                help   = STRING_TOKEN(STR_EMPTY),
                text   = STRING_TOKEN(STR_SECURE_FLASH_MODE),
                text   = STRING_TOKEN(STR_DISABLED),
                flags  = 0,
                key    = 0;
        endif;
// Key Type        
        suppressif NOT ideqval SECURE_FLASH_SETUP_VAR.Key == 0 AND NOT ideqval SECURE_FLASH_SETUP_VAR.Key == 4;
            text 
                help   = STRING_TOKEN(STR_EMPTY),
                text   = STRING_TOKEN(STR_SECURE_FLASH_KEY_TYPE),
                text   = STRING_TOKEN(STR_KEY_FILE_NA),
                flags  = 0,
                key    = 0;
        endif;
        suppressif NOT ideqval SECURE_FLASH_SETUP_VAR.Key == 1;
            text 
                help   = STRING_TOKEN(STR_EMPTY),
                text   = STRING_TOKEN(STR_SECURE_FLASH_KEY_TYPE),
                text   = STRING_TOKEN(STR_KEY_FILE_RSA2048),
                flags  = 0,
                key    = 0;
        endif;
        suppressif NOT ideqval SECURE_FLASH_SETUP_VAR.Key == 2;
            text 
                help   = STRING_TOKEN(STR_EMPTY),
                text   = STRING_TOKEN(STR_SECURE_FLASH_KEY_TYPE),
                text   = STRING_TOKEN(STR_KEY_FILE_SHA256),
                flags  = 0,
                key    = 0;
        endif;
        suppressif NOT ideqval SECURE_FLASH_SETUP_VAR.Key == 3;
            text 
                help   = STRING_TOKEN(STR_EMPTY),
                text   = STRING_TOKEN(STR_SECURE_FLASH_KEY_TYPE),
                text   = STRING_TOKEN(STR_KEY_FILE_X509),
                flags  = 0,
                key    = 0;
        endif;
// Signature Type
        suppressif NOT ideqval SECURE_FLASH_SETUP_VAR.Key == 0;
            text 
                help   = STRING_TOKEN(STR_EMPTY),
                text   = STRING_TOKEN(STR_SECURE_FLASH_SIGNATURE),
                text   = STRING_TOKEN(STR_KEY_FILE_NA),
                flags  = 0,
                key    = 0;
        endif;
        suppressif NOT ideqval SECURE_FLASH_SETUP_VAR.Key == 1;
            text 
                help   = STRING_TOKEN(STR_EMPTY),
                text   = STRING_TOKEN(STR_SECURE_FLASH_SIGNATURE),
                text   = STRING_TOKEN(STR_SECURE_FLASH_SIGN_TYPE1),
                flags  = 0,
                key    = 0;
        endif;
        suppressif NOT ideqval SECURE_FLASH_SETUP_VAR.Key == 2;
            text 
                help   = STRING_TOKEN(STR_EMPTY),
                text   = STRING_TOKEN(STR_SECURE_FLASH_SIGNATURE),
                text   = STRING_TOKEN(STR_SECURE_FLASH_SIGN_TYPE1),
                flags  = 0,
                key    = 0;
        endif;
        suppressif  NOT ideqval SECURE_FLASH_SETUP_VAR.Key == 3;
            text 
                help   = STRING_TOKEN(STR_EMPTY),
                text   = STRING_TOKEN(STR_SECURE_FLASH_SIGNATURE),
                text   = STRING_TOKEN(STR_SECURE_FLASH_SIGN_TYPE2),
                flags  = 0,
                key    = 0;
        endif;
// Flash Upd Mode
        suppressif NOT ideqval SECURE_FLASH_SETUP_VAR.Mode == 0;
            text 
                help   = STRING_TOKEN(STR_EMPTY),
                
                text   = STRING_TOKEN(STR_SECURE_FLASH_UPDATE_MODES),
                text   = STRING_TOKEN(STR_KEY_FILE_NA),
                flags  = 0,
                key    = 0;
        endif;
        suppressif NOT ideqval SECURE_FLASH_SETUP_VAR.Mode == 1;
            text 
                help   = STRING_TOKEN(STR_EMPTY),
                text   = STRING_TOKEN(STR_SECURE_FLASH_UPDATE_MODES),
                text   = STRING_TOKEN(STR_SECURE_FLASH_UPDATE_MODE1),
                flags  = 0,
                key    = 0;
        endif;
        suppressif  NOT ideqval SECURE_FLASH_SETUP_VAR.Mode == 2;
            text 
                help   = STRING_TOKEN(STR_EMPTY),
                text   = STRING_TOKEN(STR_SECURE_FLASH_UPDATE_MODES),
                text   = STRING_TOKEN(STR_SECURE_FLASH_UPDATE_MODE2),
                flags  = 0,
                key    = 0;
        endif;
        suppressif  NOT ideqval SECURE_FLASH_SETUP_VAR.Mode == 3;
            text 
                help   = STRING_TOKEN(STR_EMPTY),
                text   = STRING_TOKEN(STR_SECURE_FLASH_UPDATE_MODES),
                text   = STRING_TOKEN(STR_SECURE_FLASH_UPDATE_MODE3),
                flags  = 0,
                key    = 0;
        endif;
// Flash Lock
        suppressif NOT ideqval SECURE_FLASH_SETUP_VAR.Lock == 0;
            text 
                help   = STRING_TOKEN(STR_EMPTY),
                text   = STRING_TOKEN(STR_SECURE_FLASH_LOCK),
                text   = STRING_TOKEN(STR_KEY_FILE_NA),
                flags  = 0,
                key    = 0;
        endif;
        suppressif NOT ideqval SECURE_FLASH_SETUP_VAR.Lock == 1;
            text 
                help   = STRING_TOKEN(STR_EMPTY),
                text   = STRING_TOKEN(STR_SECURE_FLASH_LOCK),
                text   = STRING_TOKEN(STR_DISABLED),
                flags  = 0,
                key    = 0;
        endif;
        suppressif NOT ideqval SECURE_FLASH_SETUP_VAR.Lock == 2;
            text 
                help   = STRING_TOKEN(STR_EMPTY),
                text   = STRING_TOKEN(STR_SECURE_FLASH_LOCK),
                text   = STRING_TOKEN(STR_ENABLED),
                flags  = 0,
                key    = 0;
        endif;
    endform;	    
    #endif // FORM_SET_
#endif // SECURITY_FORM_SET

//**********************************************************************
//**********************************************************************
//**                                                                  **
//**        (C)Copyright 1985-2013, American Megatrends, Inc.         **
//**                                                                  **
//**                       All Rights Reserved.                       **
//**                                                                  **
//**        5555 Oakbrook Pkwy, Suite 200, Norcross, GA 30093         **
//**                                                                  **
//**                       Phone: (770)-246-8600                      **
//**                                                                  **
//**********************************************************************
//**********************************************************************
