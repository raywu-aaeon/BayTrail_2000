TOKEN
	Name  = "SecureMod_SUPPORT"
	Value  = "1"
	TokenType = Boolean
	TargetMAK = Yes
	TargetH = Yes
	Master = Yes
	Token = "AmiCryptoPkg_SUPPORT" "=" "1"
End

TOKEN
	Name  = "SECURE_FLASH_MODULE_REVISION"
	Value  = "15"
	Help  = "Version of Secure Flash module interfaces"
	TokenType = Integer
	TargetMAK = Yes
	TargetH = Yes
End

TOKEN
	Name  = "CREATE_FWCAPSULE"
	Value  = "1"
	Help  = "Mode selector for creating digitally signed Aptio FW Capsule, used in Protected Flash Updates and Recovery.\0 - Don't prepare Aptio FW Capsule, only link Secure Flash interfaces;\1 - Create Signed Aptio FW Capsule with Ami test FW keys linked to a project;\2 - Skip final FW Capsule signing process, e.g hand off this task to signing server."
	TokenType = Integer
	TargetMAK = Yes
	Range  = "0-1-2"
End

TOKEN
	Name  = "====FWCAPSULE FORMAT TUNE-UP===="
	Value  = "=============================="
	TokenType = Expression
End

TOKEN
	Name  = "FWCAPSULE_FILE_FORMAT"
	Value  = "0"
	Help  = "0 - Include Aptio FW Signature Block inside the BIOS ROM as a ROM Hole Ffs.\1 - FW Signature Block is attached on top of BIOS Image."
	TokenType = Integer
	TargetMAK = Yes
	TargetH = Yes
End

TOKEN
	Name  = "FWCAPSULE_CERT_FORMAT"
	Value  = "0"
	Help  = "0 - FwCapsule Hdr includes UEFI RSA2048_SHA256 signed certificate\1 - PKCS#7 Certificate. Signing keys delivered in PKCS#12 .pfx and X.509.cer"
	TokenType = Integer
	TargetMAK = Yes
	TargetH = Yes
End

TOKEN
	Name  = "UNSIGNED_BIOS_ROM"
	Value  = "$(BUILD_DIR)$(PATH_SLASH)$(PLATFORM_NAME)$(PATH_SLASH)$(TARGET)_$(TOOL_CHAIN_TAG)$(PATH_SLASH)FV$(PATH_SLASH)AMIROM.fd"
	Help  = "File name of the BIOS image to be signed."
	TokenType = Expression
	TargetMAK = Yes
End

TOKEN
	Name  = "FWCAPSULE_FILE_NAME"
	Value  = "$(PROJECT_TAG).BIN"
	Help  = "Signed BIOS image file name. FwCapsule Hdr with Signature is embedded within the ROM.\File used as a Recovery image."
	TokenType = Expression
	TargetMAK = Yes
	TargetH = Yes
	Token = "FWCAPSULE_FILE_FORMAT" "=" "0"
End

TOKEN
	Name  = "FWCAPSULE_FILE_NAME"
	Value  = "$(PROJECT_TAG).CAP"
	Help  = "Signed BIOS image file name. Aptio FwCapsule Hdr is attached on top of BIOS.ROM file.\File replaces default Recovery image."
	TokenType = Expression
	TargetMAK = Yes
	TargetH = Yes
	Token = "FWCAPSULE_FILE_FORMAT" "=" "1"
End

TOKEN
	Name  = "FWCAPSULE_IMAGE_ALLIGN"
	Value  = "4096"
	Help  = "Aptio FW Capsule Header allignment value"
	TokenType = Integer
	TargetMAK = Yes
	TargetH = Yes
	Range  = "Min FW Capsule file size allignment is 512"
End

TOKEN
	Name  = "FWCAPSULE_MAX_HDR_SIZE"
	Value  = "2048"
	Help  = "Max size of embedded FwCapsule Header file. Default Recovery image size is increased by this value."
	TokenType = Integer
	TargetMAK = Yes
	TargetH = Yes
	Range  = "Min FW Capsule Header size is 2048"
End

TOKEN
	Name  = "FWCAPSULE_MAX_HDR_SIZE"
	Value  = "$(FWCAPSULE_IMAGE_ALLIGN)"
	Help  = "Do not modify this token!"
	TokenType = Integer
	TargetMAK = Yes
	TargetH = Yes
	Lock = Yes
	Token = "FWCAPSULE_IMAGE_ALLIGN" ">" "2048"
End

TOKEN
	Name  = "FWCAPSULE_IMAGE_SIZE"
	Value  = "$(FLASH_SIZE)+$(FWCAPSULE_MAX_HDR_SIZE)"
	Help  = "This is the min size of the Aptio Signed Recovery capsule file"
	TokenType = Integer
	TargetH = Yes
End

TOKEN
	Name  = "FWSIG_PADDING"
	Value  = "0"
	Help  = "RSA Signature padding scheme.\0-PKCS1v1.5, 1-PSS, 2-xx reserved"
	TokenType = Integer
	TargetMAK = Yes
	TargetH = Yes
End

TOKEN
	Name  = "FWKEY_FILE_FORMAT"
	Value  = "1"
	Help  = "Data format of Root FW Key FFS inside BIOS RTU (FV_BB).\0-n-modulus of RSA2048 key, 1-SHA256 Hash of RSA2048 n-modulus, 2-x.509 DER Certificate key, 3-xx reserved"
	TokenType = Integer
	TargetMAK = Yes
	TargetFDF = Yes
	Token = "FWCAPSULE_CERT_FORMAT" "=" "0"
End

TOKEN
	Name  = "FWKEY_FILE_FORMAT"
	Value  = "2"
	Help  = "Don't change the value."
	TokenType = Integer
	TargetMAK = Yes
	TargetFDF = Yes
	Token = "FWCAPSULE_CERT_FORMAT" "=" "1"
End

TOKEN
	Name  = "FWKEY_FILE_REPLACE"
	Value  = "1"
	Help  = "Directive to Cryptocon.exe to replace existing Root Platform Key inside BIOS.ROM with the Key used to sign FwCapsule"
	TokenType = Integer
	TargetMAK = Yes
End

TOKEN
	Name  = "ROM_LAYOUT_EX"
	Value  = "$(BUILD_DIR)/RomLayoutEx.bin"
	Help  = "Name of the extended rom map file used to sign ROM image"
	TokenType = Expression
	TargetMAK = Yes
End

PATH
	Name  = "SecureMod_DIR"
End

MODULE
	File  = "SecureFlash.mak"
	Token = "CREATE_FWCAPSULE" "!=" "0"	
End

ELINK
    Name  = "$(SecureMod_DIR)/SecureFlash.uni"
    Parent  = "SetupStringFiles"
    InvokeOrder = AfterParent
End

ELINK
    Name  = "$(SecureMod_DIR)/SecureFlash.sd"
    Parent  = "SETUP_DEFINITIONS"
    InvokeOrder = AfterParent
End

ELINK
	Name  = "AmiModulePkg/SecureFlash/FdfRules.txt"
	Parent  = "FdfRules"
	InvokeOrder = AfterParent
End

ELINK
	Name  = "CRYPTOCON_CMDLINE"
	InvokeOrder = ReplaceParent
	Help  = "Cryptocon.exe command line to create signed FwCapsule"
End

ELINK
	Name  = "-c $(FWrootKey) -k $(FWpriv)"
	Parent  = "CRYPTOCON_CMDLINE"
	Token = "FWCAPSULE_CERT_FORMAT" "=" "0"
	InvokeOrder = AfterParent
End

ELINK
	Name  = "-c2 -x $(FWpriv),$(FW_PFX_Password)"
	Parent  = "CRYPTOCON_CMDLINE"
	Token = "FWCAPSULE_CERT_FORMAT" "=" "1"
	InvokeOrder = AfterParent
End

ELINK
	Name  = "-n"
	Parent  = "CRYPTOCON_CMDLINE"
	Help  = "-n directive to replace Platform Root Key embedded inside BIOS.ROM with the Key used to sign new FwCapsule"	
	Token = "FWKEY_FILE_REPLACE" "=" "1"
	Token = "FWCAPSULE_CERT_FORMAT" "=" "0"
	InvokeOrder = AfterParent
End

ELINK
	Name  = "-n -k $(FWpub)"
	Parent  = "CRYPTOCON_CMDLINE"
	Token = "FWKEY_FILE_REPLACE" "=" "1"
	Token = "FWCAPSULE_CERT_FORMAT" "=" "1"
	InvokeOrder = AfterParent
End

ELINK
	Name  = "-y -l $(FWCAPSULE_MAX_HDR_SIZE)"
	Parent  = "CRYPTOCON_CMDLINE"
	Token = "FWCAPSULE_FILE_FORMAT" "=" "0"
	InvokeOrder = AfterParent
End

ELINK
	Name  = "-l $(FWCAPSULE_IMAGE_ALLIGN)"
	Parent  = "CRYPTOCON_CMDLINE"
	Token = "FWCAPSULE_FILE_FORMAT" "=" "1"
	InvokeOrder = AfterParent
End

ELINK
	Name  = "-q"
	Parent  = "CRYPTOCON_CMDLINE"
	Help  = "Extended FwCapsule Hdr Signature Calculation scheme"
	Token = "FWCAPSULE_CERT_FORMAT" "=" "0"
	InvokeOrder = AfterParent
End

ELINK
	Name  = "-p"
	Parent  = "CRYPTOCON_CMDLINE"
	Help  = "RSA-PSS Signature padding scheme. (Default - PKCS#1v1.5)"
	Token = "FWCAPSULE_CERT_FORMAT" "=" "0"
	Token = "FWSIG_PADDING" "=" "1"
	InvokeOrder = AfterParent
End

ELINK
	Name  = "-r2 -f $(UNSIGNED_BIOS_ROM) -o $(FWCAPSULE_FILE_NAME)"
	Parent  = "CRYPTOCON_CMDLINE"
	InvokeOrder = AfterParent
End

INFComponent
	Name  = "FwCapsuleHdr"
	File  = "FwCapsuleHdr.inf"
	Package  = "AmiModulePkg"
	ModuleTypes  = "USER_DEFINED"
End

FFS_FILE
	Name  = "FwCapsuleHdr"
	FD_AREA  = "FV_MAIN"
	INFComponent  = "AmiModulePkg.FwCapsuleHdr"
	Rule_Override  = "SubtypeGuidUncompressedUnchecksummed"
	Token = "NESTED_FV_MAIN" "=" "0"
	Token = "CREATE_FWCAPSULE" "!=" "0"
End

FFS_FILE
	Name  = "FwCapsuleHdr"
	FD_AREA  = "FV_MAIN_WRAPPER"
	INFComponent  = "AmiModulePkg.FwCapsuleHdr"
	Rule_Override  = "SubtypeGuidUncompressedUnchecksummed"
	Token = "NESTED_FV_MAIN" "=" "1"
	Token = "CREATE_FWCAPSULE" "!=" "0"
End

