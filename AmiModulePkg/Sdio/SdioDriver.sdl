TOKEN
	Name  = "SDIO_DRIVER_SUPPORT"
	Value  = "1"
	Help  = "Main switch to enable SdioDriver support in Project"
	TokenType = Boolean
	TargetMAK = Yes
	TargetH = Yes	
	Master = Yes
End

PATH
	Name  = "SDIO_DRIVER_DIR"
	Path  = "AmiModulePkg\Sdio"
End

PATH
	Name  = "SDIO_SMM_DIR"
	Path  = "$(SDIO_DRIVER_DIR)\SdioSmm"
End

PATH
	Name  = "SDIO_SETUP_DIR"
	Path  = "$(SDIO_DRIVER_DIR)\setup"
End

MODULE
	Help  = "Includes SdioDriver.mak to Project"
	File  = "SdioDriver.mak"
End

TOKEN
	Name  = "SDIO_Transfer_Buffer"
	Value  = "0"
	Help  = "0 - 4Kbytes (Detects A11 carry out)\1 - 8Kbytes (Detects A12 carry out)\2 - 16Kbytes (Detects A13 carry out)\3 - 32Kbytes (Detects A14 carry out)\4 - 64Kbytes (Detects A15 carry out)\5 - 128Kbytes (Detects A16 carry out)\6 - 256Kbytes (Detects A17 carry out)\7 - 512Kbytes (Detects A18 carry out)"
	TokenType = Integer
	TargetH = Yes
End


TOKEN
	Name  = "SDIO_WriteProtect"
	Value  = "1"
	Help  = "On:Check Mechanical write protect switch before writing data .\Off:Ignore write protect"
	TokenType = Boolean
	TargetH = Yes
End

TOKEN
	Name  = "SDIO_SWSMI"
	Value  = "0x40"
	Help  = "Data to be written to SW SMI port to invoke SDIO SW SMI handler."
	TokenType = Integer
	TargetH = Yes
End

TOKEN
	Name  = "SDIO_SMM_SUPPORT"
	Value  = "1"
	Help  = " SMM support in Sdio Driver.\1 - Operates in SMM mode \0 - Operates in NonSMM mode "
	TokenType = Boolean
	TargetH = Yes
	TargetMak = Yes
End

TOKEN
	Name  = "AZUREWAVE_VENDOR_NAME"
	Value  = '"AzureWave AW-NB065"'
	TokenType = Expression
	TargetMAK = Yes
	TargetH = Yes
End

ELINK
	Name  = "$(SDIO_SETUP_DIR)\SdioSetup.sd"
	Parent  = "SETUP_DEFINITIONS"
	InvokeOrder = AfterParent
End

ELINK
	Name  = "$(SDIO_SETUP_DIR)\SdioSetup.uni"
	Parent  = "SetupStringFiles"
	InvokeOrder = AfterParent
End

ELINK
	Name  = "$(SDIO_SETUP_DIR)\SdioSetup.c"
	Parent  = "SetupCallbackFiles"
	InvokeOrder = AfterParent
End

ELINK
	Name  = "gSdioBusInitProtocolGuid"
	Parent  = "AdditionalSetupProtocols"
	InvokeOrder = AfterParent
End

ELINK
	Name  = "InitSdioStrings,"
	Parent  = "SetupStringInit"
	InvokeOrder = AfterParent
End

ELINK
	Name  = "SdIoManufactureDeviceList"
	InvokeOrder = ReplaceParent
	Help  = "SD IO device manufacture device list in the format of(Manufacture ID, ManufactureCode, Vendor Name),"
End

ELINK
	Name  = "{0x2D0, 0x4319,AZUREWAVE_VENDOR_NAME},"
	Parent  = "SdIoManufactureDeviceList"
	InvokeOrder = AfterParent
End

INFComponent
	Name  = "SdioDriver"
	File  = "../../Build/SdioDriver.inf"
	Package  = "AmiModulePkg"
	ModuleTypes  = "UEFI_DRIVER"
End

INFComponent
	Name  = "SdioSmm"
	File  = "SdioSmm\SdioSmm.inf"
	Package  = "AmiModulePkg"
	ModuleTypes  = "DXE_SMM_DRIVER"
	Token = "SDIO_SMM_SUPPORT" "=" "1"
End

#INFComponent
#    Name  = "SdioControllerPeiLib"
#    File  = "SdioControllerPeiLib.inf"
#    Package  = "AmiModulePkg"
#End

#LibraryMapping
#    Class  = "SdioControllerPeiLib"
#    Instance  = "AmiModulePkg.SdioControllerPeiLib"
#End

INFComponent
    Name  = "SdioControllerDxeLib"
    File  = "SdioControllerDxeLib.inf"
    Package  = "AmiModulePkg"
End

LibraryMapping
    Class  = "SdioControllerDxeLib"
    Instance  = "AmiModulePkg.SdioControllerDxeLib"
End