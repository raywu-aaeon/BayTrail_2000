//**********************************************************************
//**********************************************************************
//**                                                                  **
//**        (C)Copyright 1985-2013, American Megatrends, Inc.         **
//**                                                                  **
//**                       All Rights Reserved.                       **
//**                                                                  **
//**         5555 Oakbrook Pkwy, Suite 200, Norcross, GA 30093        **
//**                                                                  **
//**                       Phone: (770)-246-8600                      **
//**                                                                  **
//**********************************************************************
//**********************************************************************

//**********************************************************************
// $Header: /Alaska/SOURCE/Modules/HddSecurity/IdeSecurity.sd 14    1/03/12 1:42a Jittenkumarp $
//
// $Revision: 14 $
//
// $Date: 1/03/12 1:42a $
//**********************************************************************

//**********************************************************************

//<AMI_FHDR_START>
//**********************************************************************
// Name:        HddSecurity.sd
//
// Description: Hdd Security in Setup.
//**********************************************************************
//<AMI_FHDR_END>


#ifdef SECURITY_FORM_SET
    #ifdef FORM_SET_VARSTORE
        varstore IDE_SECURITY_CONFIG,
        key = IDE_SECURITY_HD_1_KEY_ID,
        name = IDESecDev,
        guid = IDE_SECURITY_CONFIG_GUID;
    #endif
#endif

#if defined(VFRCOMPILE) && !defined(CONTROLS_ARE_DEFINED)
#define CONTROL_DEFINITION
#endif

#ifdef CONTROL_DEFINITION

#if (SETUP_SAME_SYS_HDD_PW != 1)
    #if ALL_HDD_SAME_PW
        #define IDE_SECURITY_GET_USER_PASSWORD\
            suppressif ideqvallist IDE_SECURITY_CONFIG.Count == 0;\
            password varid  = IDE_SECURITY_CONFIG.IDEUserPassword,\
                    prompt      = STRING_TOKEN(STR_IDE_USER_PASSWORD),\
                    help        = STRING_TOKEN(STR_IDE_USER_PASSWORD_HELP),\
                    flags       = 0,\
                    key         = 0,\
                    minsize     = 0,\
                    maxsize     = IDE_PASSWORD_LENGTH,\
                    encoding    = 1,\
            endpassword;\
            endif;
        #define IDE_SECURITY_GET_MASTER_PASSWORD\
            suppressif ideqvallist IDE_SECURITY_CONFIG.Count == 0;\
            password varid  = IDE_SECURITY_CONFIG.IDEMasterPassword,\
                    prompt      = STRING_TOKEN(STR_IDE_MASTER_PASSWORD),\
                    help        = STRING_TOKEN(STR_IDE_MASTER_PASSWORD_HELP),\
                    flags       = 0,\
                    key         = 0,\
                    minsize     = 0,\
                    maxsize     = IDE_PASSWORD_LENGTH,\
                    encoding    = 1,\
            endpassword;\
            endif;

        #define IDE_SECURITY_GET_IDE_USER_PASSWORD
        #define IDE_SECURITY_GET_IDE_MASTER_PASSWORD

    #else 
        #define IDE_SECURITY_GET_USER_PASSWORD
        #define IDE_SECURITY_GET_MASTER_PASSWORD

        #define IDE_SECURITY_GET_IDE_USER_PASSWORD\
            password varid  = IDE_SECURITY_CONFIG.IDEUserPassword,\
                    prompt      = STRING_TOKEN(STR_IDE_USER_PASSWORD),\
                    help        = STRING_TOKEN(STR_IDE_USER_PASSWORD_HELP),\
                    flags       = 0,\
                    key         = 0,\
                    minsize     = 0,\
                    maxsize     = IDE_PASSWORD_LENGTH,\
                    encoding    = 1,\
            endpassword;\
    
        #define IDE_SECURITY_GET_IDE_MASTER_PASSWORD\
            password varid  = IDE_SECURITY_CONFIG.IDEMasterPassword,\
                    prompt      = STRING_TOKEN(STR_IDE_MASTER_PASSWORD),\
                    help        = STRING_TOKEN(STR_IDE_MASTER_PASSWORD_HELP),\
                    flags       = 0,\
                    key         = 0,\
                    minsize     = 0,\
                    maxsize     = IDE_PASSWORD_LENGTH,\
                    encoding    = 1,\
            endpassword;\

    #endif

    #define IDE_SECURITY_CONFIG_COUNT\
        text\
            help   = STRING_TOKEN(STR_EMPTY),\
            text   = STRING_TOKEN(STR_HDD_SECURITY_CONFIG),\
            text   = STRING_TOKEN(STR_EMPTY),\
            flags  = 0,\
            key    = 0;\

    #define IDE_SECURITY_CONFIG_SUPPORTED\
        text\
            help   = STRING_TOKEN(STR_EMPTY),\
            text   = STRING_TOKEN(STR_SEC_SUPPORTED),\
            text   = STRING_TOKEN(STR_HDDS_YES),\
            flags  = 0,\
            key    = 0;\

    #define IDE_SECURITY_CONFIG_NOT_SUPPORTED\
        text\
            help   = STRING_TOKEN(STR_EMPTY),\
            text   = STRING_TOKEN(STR_SEC_SUPPORTED),\
            text   = STRING_TOKEN(STR_HDDS_NO),\
            flags  = 0,\
            key    = 0;\
    

    #define IDE_SECURITY_CONFIG_ENABLED\
        text\
            help   = STRING_TOKEN(STR_EMPTY),\
            text   = STRING_TOKEN(STR_SEC_ENABLED),\
            text   = STRING_TOKEN(STR_HDDS_YES),\
            flags  = 0,\
            key    = 0;\

    #define IDE_SECURITY_CONFIG_NOT_ENABLED\
        text\
            help   = STRING_TOKEN(STR_EMPTY),\
            text   = STRING_TOKEN(STR_SEC_ENABLED),\
            text   = STRING_TOKEN(STR_HDDS_NO),\
            flags  = 0,\
            key    = 0;\
    
  
    #define IDE_SECURITY_CONFIG_LOCKED\
        text\
            help   = STRING_TOKEN(STR_EMPTY),\
            text   = STRING_TOKEN(STR_SEC_LOCKED),\
            text   = STRING_TOKEN(STR_HDDS_YES),\
            flags  = 0,\
            key    = 0;\
    

    #define IDE_SECURITY_CONFIG_NOT_LOCKED\
        text\
            help   = STRING_TOKEN(STR_EMPTY),\
            text   = STRING_TOKEN(STR_SEC_LOCKED),\
            text   = STRING_TOKEN(STR_HDDS_NO),\
            flags  = 0,\
            key    = 0;\
    
    #define IDE_SECURITY_CONFIG_FROZEN\
        text\
            help   = STRING_TOKEN(STR_EMPTY),\
            text   = STRING_TOKEN(STR_SEC_FROZEN),\
            text   = STRING_TOKEN(STR_HDDS_YES),\
            flags  = 0,\
            key    = 0;\
    
    #define IDE_SECURITY_CONFIG_NOT_FROZEN\
        text\
            help   = STRING_TOKEN(STR_EMPTY),\
            text   = STRING_TOKEN(STR_SEC_FROZEN),\
            text   = STRING_TOKEN(STR_HDDS_NO),\
            flags  = 0,\
            key    = 0;\
    
    #define IDE_SECURITY_CONFIG_USER_PASSWORD_STATUS\
        text\
            help   = STRING_TOKEN(STR_EMPTY),\
            text   = STRING_TOKEN(STR_IDE_USER_PASSWORD_STS),\
            text   = STRING_TOKEN(STR_HDDS_INSTALLED),\
            flags  = 0,\
            key    = 0;\

    #define IDE_SECURITY_CONFIG_USER_PASSWORD_STATUS_NOT_INSTALLED\
        text\
            help   = STRING_TOKEN(STR_EMPTY),\
            text   = STRING_TOKEN(STR_IDE_USER_PASSWORD_STS),\
            text   = STRING_TOKEN(STR_NOT_HDDS_INSTALLED),\
            flags  = 0,\
            key    = 0;\

    #define IDE_SECURITY_CONFIG_MASTER_PASSWORD_STATUS\
        text\
            help   = STRING_TOKEN(STR_EMPTY),\
            text   = STRING_TOKEN(STR_IDE_MASTER_PASSWORD_STS),\
            text   = STRING_TOKEN(STR_HDDS_INSTALLED),\
            flags  = 0,\
            key    = 0;\

    #define IDE_SECURITY_CONFIG_MASTER_PASSWORD_STATUS_NOT_INSTALLED\
        text\
            help   = STRING_TOKEN(STR_EMPTY),\
            text   = STRING_TOKEN(STR_IDE_MASTER_PASSWORD_STS),\
            text   = STRING_TOKEN(STR_NOT_HDDS_INSTALLED),\
            flags  = 0,\
            key    = 0;\

#else

        #define IDE_SECURITY_GET_USER_PASSWORD
        #define IDE_SECURITY_GET_MASTER_PASSWORD
        #define IDE_SECURITY_CONFIG_COUNT
        #define IDE_SECURITY_CONFIG_SUPPORTED
        #define IDE_SECURITY_CONFIG_NOT_SUPPORTED
        #define IDE_SECURITY_CONFIG_ENABLED
        #define IDE_SECURITY_CONFIG_NOT_ENABLED
        #define IDE_SECURITY_CONFIG_LOCKED
        #define IDE_SECURITY_CONFIG_NOT_LOCKED
        #define IDE_SECURITY_CONFIG_FROZEN
        #define IDE_SECURITY_CONFIG_NOT_FROZEN
        #define IDE_SECURITY_CONFIG_USER_PASSWORD_STATUS
        #define IDE_SECURITY_CONFIG_USER_PASSWORD_STATUS_NOT_INSTALLED
        #define IDE_SECURITY_CONFIG_MASTER_PASSWORD_STATUS
        #define IDE_SECURITY_CONFIG_MASTER_PASSWORD_STATUS_NOT_INSTALLED
        #define IDE_SECURITY_GET_IDE_USER_PASSWORD
        #define IDE_SECURITY_GET_IDE_MASTER_PASSWORD
#endif
#endif


#ifdef CONTROLS_WITH_DEFAULTS
        IDE_SECURITY_GET_USER_PASSWORD
        IDE_SECURITY_GET_MASTER_PASSWORD
        IDE_SECURITY_CONFIG_COUNT
        IDE_SECURITY_CONFIG_SUPPORTED
        IDE_SECURITY_CONFIG_NOT_SUPPORTED
        IDE_SECURITY_CONFIG_ENABLED
        IDE_SECURITY_CONFIG_NOT_ENABLED
        IDE_SECURITY_CONFIG_LOCKED
        IDE_SECURITY_CONFIG_NOT_LOCKED
        IDE_SECURITY_CONFIG_FROZEN
        IDE_SECURITY_CONFIG_NOT_FROZEN
        IDE_SECURITY_CONFIG_USER_PASSWORD_STATUS
        IDE_SECURITY_CONFIG_USER_PASSWORD_STATUS_NOT_INSTALLED
        IDE_SECURITY_CONFIG_MASTER_PASSWORD_STATUS
        IDE_SECURITY_CONFIG_MASTER_PASSWORD_STATUS_NOT_INSTALLED
        IDE_SECURITY_GET_IDE_USER_PASSWORD
        IDE_SECURITY_GET_IDE_MASTER_PASSWORD
#endif //#ifdef CONTROLS_WITH_DEFAULTS

#if (SETUP_SAME_SYS_HDD_PW != 1)
    #ifdef SECURITY_FORM_SET

        #ifndef SUPPRESS_GRAYOUT_ENDIF //old Core
        #define SUPPRESS_GRAYOUT_ENDIF endif;
        #endif
    
  
        #ifdef FORM_SET_ITEM
            SEPARATOR

            #if ALL_HDD_SAME_PW

                suppressif ideqvallist IDE_SECURITY_CONFIG.Frozen == 1;
                    IDE_SECURITY_GET_USER_PASSWORD
                endif;

                #if DISPLAY_MASTER_PASSWORD

                    suppressif ideqval IDE_SECURITY_CONFIG.Frozen == 1;
                    grayoutif  ideqval IDE_SECURITY_CONFIG.ShowMaster == 0;
                        IDE_SECURITY_GET_MASTER_PASSWORD
                        SUPPRESS_GRAYOUT_ENDIF
                #endif
            #endif
        #endif

        #ifdef FORM_SET_GOTO
            SEPARATOR

            suppressif ideqvallist IDE_SECURITY_CONFIG.Count == 0;
                IDE_SECURITY_CONFIG_COUNT
            endif;

            suppressif ideqvallist IDE_SECURITY_CONFIG.Count == 0xFFFF;
                goto      IDE_SECURITY_FORM,
                prompt  = STRING_TOKEN(STR_EMPTY),
                help    = STRING_TOKEN(STR_IDE_SECURITY_HELP);
            endif;
      
        #endif
     
        #ifdef FORM_SET_FORM
    
        form
        formid = AUTO_ID(IDE_SECURITY_FORM),
        title = STRING_TOKEN(STR_IDE_SECURITY_HD);
    
#if !ALL_HDD_SAME_PW
        SUBTITLE(STRING_TOKEN(STR_SECURITY_HDD_PWD_DESC))
        SEPARATOR
        SUBTITLE(STRING_TOKEN(STR_SECURITY_HDD_BANNER_ONE))
        SUBTITLE(STRING_TOKEN(STR_SECURITY_HDD_BANNER_TWO))
        SUBTITLE(STRING_TOKEN(STR_SECURITY_HDD_BANNER_THREE))
        SUBTITLE(STRING_TOKEN(STR_SECURITY_HDD_BANNER_FOUR))
        SUBTITLE(STRING_TOKEN(STR_SECURITY_HDD_BANNER_FIVE))
        SUBTITLE(STRING_TOKEN(STR_SECURITY_HDD_BANNER_SIX))
#endif      
        SEPARATOR
        SUBTITLE(STRING_TOKEN(STR_HDD_PASSWORD_CONFIG))
        SEPARATOR

        suppressif ideqvallist IDE_SECURITY_CONFIG.Supported == 0;
            IDE_SECURITY_CONFIG_SUPPORTED
        endif;

        suppressif ideqvallist IDE_SECURITY_CONFIG.Supported == 1;
            IDE_SECURITY_CONFIG_NOT_SUPPORTED
        endif;

        suppressif ideqvallist IDE_SECURITY_CONFIG.Enabled == 0;
            IDE_SECURITY_CONFIG_ENABLED
        endif;
    
        suppressif ideqvallist IDE_SECURITY_CONFIG.Enabled == 1;
            IDE_SECURITY_CONFIG_NOT_ENABLED
        endif;

        suppressif ideqvallist IDE_SECURITY_CONFIG.Locked == 0;
            IDE_SECURITY_CONFIG_LOCKED
        endif;

        suppressif ideqvallist IDE_SECURITY_CONFIG.Locked == 1;
            IDE_SECURITY_CONFIG_NOT_LOCKED
        endif;

        suppressif ideqvallist IDE_SECURITY_CONFIG.Frozen == 0;
            IDE_SECURITY_CONFIG_FROZEN
        endif;

        suppressif ideqvallist IDE_SECURITY_CONFIG.Frozen == 1;
            IDE_SECURITY_CONFIG_NOT_FROZEN
        endif;
    
        suppressif ideqvallist IDE_SECURITY_CONFIG.UserPasswordStatus == 0;
            IDE_SECURITY_CONFIG_USER_PASSWORD_STATUS
        endif;

        suppressif ideqvallist IDE_SECURITY_CONFIG.UserPasswordStatus == 1;
            IDE_SECURITY_CONFIG_USER_PASSWORD_STATUS_NOT_INSTALLED
        endif;

        suppressif ideqvallist IDE_SECURITY_CONFIG.MasterPasswordStatus == 0;
            IDE_SECURITY_CONFIG_MASTER_PASSWORD_STATUS
        endif;

        suppressif ideqvallist IDE_SECURITY_CONFIG.MasterPasswordStatus == 1;
            IDE_SECURITY_CONFIG_MASTER_PASSWORD_STATUS_NOT_INSTALLED
        endif;

        SEPARATOR
    
        #if !ALL_HDD_SAME_PW
            suppressif ideqvallist IDE_SECURITY_CONFIG.Frozen == 1;
                IDE_SECURITY_GET_IDE_USER_PASSWORD
            endif;
            #if DISPLAY_MASTER_PASSWORD
                suppressif ideqval IDE_SECURITY_CONFIG.Frozen == 1;
                grayoutif  ideqval IDE_SECURITY_CONFIG.ShowMaster == 0;
                    IDE_SECURITY_GET_IDE_MASTER_PASSWORD
                    SUPPRESS_GRAYOUT_ENDIF
            #endif
        #endif

        endform;
        
        #endif
    #endif
#endif


//**********************************************************************
//**********************************************************************
//**                                                                  **
//**        (C)Copyright 1985-2013, American Megatrends, Inc.         **
//**                                                                  **
//**                       All Rights Reserved.                       **
//**                                                                  **
//**         5555 Oakbrook Pkwy, Suite 200, Norcross, GA 30093        **
//**                                                                  **
//**                       Phone: (770)-246-8600                      **
//**                                                                  **
//**********************************************************************
//**********************************************************************