#ifdef SETUP_DATA_DEFINITION
//----------------------------------------------------------------------------
// Put NVRAM data definitions here.
// For example: UINT8 Data1;
// These definitions will be converted by the build process
// to a definitions of SETUP_DATA fields.
//----------------------------------------------------------------------------
#endif
//----------------------------------------------------------------------------
//                CONTROL DEFINITION
//----------------------------------------------------------------------------
#if defined(VFRCOMPILE) && !defined(CONTROLS_ARE_DEFINED)
#define CONTROL_DEFINITION
#endif



#ifdef CONTROL_DEFINITION

//----------------------------------------------------------------------------
//                 Exit
//----------------------------------------------------------------------------
//#ifdef AMI_TSE_SAVE_AND_RESET
//#undef AMI_TSE_SAVE_AND_RESET
#define AMI_TSE_SAVE_AND_RESET\
    suppressif ideqval AMI_CALLBACK.Value == SAVE_AND_RESET_VALUE;\
        goto AAEON_EXIT_MAIN,\
            prompt = STRING_TOKEN(STR_SAVE_RESET),\
            help = STRING_TOKEN(STR_SAVE_RESET_HELP);\
    endif;
//#endif // AMI_TSE_SAVE_AND_RESET

//#ifdef AMI_TSE_DISCARD_AND_EXIT
//#undef AMI_TSE_DISCARD_AND_EXIT
#define AMI_TSE_DISCARD_AND_EXIT\
    suppressif ideqval AMI_CALLBACK.Value == DISCARD_AND_EXIT_VALUE;\
        goto AAEON_EXIT_MAIN,\
            prompt = STRING_TOKEN(STR_DISCARD_EXIT),\
            help = STRING_TOKEN(STR_DISCARD_EXIT_HELP);\
    endif;
//#endif // AMI_TSE_DISCARD_AND_EXIT

//#ifdef AMI_TSE_RESTORE_DEFAULTS
//#undef AMI_TSE_RESTORE_DEFAULTS
#define AMI_TSE_RESTORE_DEFAULTS\
    suppressif ideqval AMI_CALLBACK.Value == RESTORE_DEFAULTS_VALUE;\
        goto AAEON_EXIT_MAIN,\
            prompt = STRING_TOKEN(STR_RESTORE_DEFAULTS),\
            help = STRING_TOKEN(STR_RESTORE_DEFAULTS_HELP);\
    endif;
//#endif // AMI_TSE_RESTORE_DEFAULTS

#define QUIET_BOOT\
        checkbox varid = AMITSESETUP.AMISilentBoot,\
            prompt = STRING_TOKEN(STR_QUIET_BOOT),\
            help = STRING_TOKEN(STR_QUIET_BOOT_HELP),\
            flags = 0,\
            key = 0,\
            default = DEFAULT_QUIET_BOOT,\
            default = DEFAULT_QUIET_BOOT, defaultstore = AmiMfgDefault,\
        endcheckbox;

#define AMI_BOOT_ORDER\
        suppressif ideqvallist BOOT_MANAGER.BootCount == 0xFFFF;\
            oneof varid = BOOT_ORDER.Value,\
                prompt = STRING_TOKEN(STR_BOOT_ORDER_X),\
                help = STRING_TOKEN(STR_BOOT_ORDER_HELP),\
                flags = 0,\
                option text = STRING_TOKEN(STR_EMPTY), value = 0, flags = 0;\
                option text = STRING_TOKEN(STR_EMPTY), value = 1, flags = 0;\
                default = 0,\
                default = 0, defaultstore = AmiMfgDefault,\
            endoneof;\
        endif;

#define AMI_BOOT_ORDER_GROUPS_GOTO\
        suppressif ideqvallist LEGACY_DEV_INFO.GroupCount == 0xFFFF;\
            goto BBS_ORDER_FORM,\
                prompt = STRING_TOKEN(STR_EMPTY),\
                help = STRING_TOKEN(STR_BBS_ORDER_HELP);\
        endif;

#endif //ENDIF CONTROL_DEFINITION



#ifdef CONTROLS_WITH_DEFAULTS

#endif //#ifdef CONTROLS_WITH_DEFAULTS
